
 -------------------- 

Abstraction and Reasoning Challenge
Team: Mathematicians + Experts
https://www.kaggle.com/c/abstraction-and-reasoning-challenge

 -------------------- 

GlobSolver
DoNothingSolver
BorderSolver
GeometrySolver
SingleColorSolver
ZoomSolver
TessellationSolver
XGBSingleColorSolver
XGBGridSolver

 -------------------- 

####### training GlobSolver
####### training DoNothingSolver
####### training BorderSolver
####### training GeometrySolver
solved: training/25ff71a9.json GeometrySolver ('<function:roll>', (-2, 0))
solved: training/3c9b0459.json GeometrySolver ('<function:rot90>', (2,))
solved: training/6150a2bd.json GeometrySolver ('<function:rot90>', (2,))
solved: training/67a3c6ac.json GeometrySolver ('<function:flip>', (1,))
solved: training/68b16354.json GeometrySolver ('<function:flip>', (0,))
solved: training/74dd1130.json GeometrySolver ('<function:swapaxes>', (0, 1))
solved: training/9dfd6313.json GeometrySolver ('<function:swapaxes>', (0, 1))
solved: training/ed36ccf7.json GeometrySolver ('<function:rot90>', (1,))
####### training SingleColorSolver
solved: training/445eab21.json SingleColorSolver ('<function:max_color>',)
solved: training/5582e5ca.json SingleColorSolver ('<function:max_color>',)
####### training ZoomSolver
####### training TessellationSolver
solved: training/007bbfb7.json TessellationSolver {'preprocess': <function copy at 0x7fa8d137cae8>, 'p_arg': (), 'transform': <function copy at 0x7fa8d137cae8>, 't_arg': (), 'query': <function query_not_zero at 0x7fa8cd38b8c8>, 'q_arg': ()}
solved: training/a416b8f3.json TessellationSolver {'preprocess': <function copy at 0x7fa8d137cae8>, 'p_arg': (), 'transform': <function copy at 0x7fa8d137cae8>, 't_arg': (), 'query': <function query_true at 0x7fa8cd3798c8>, 'q_arg': ()}
solved: training/c3e719e8.json TessellationSolver {'preprocess': <function copy at 0x7fa8d137cae8>, 'p_arg': (), 'transform': <function copy at 0x7fa8d137cae8>, 't_arg': (), 'query': <function query_max_color at 0x7fa8cd38bae8>, 'q_arg': ()}
solved: training/cce03e0d.json TessellationSolver {'preprocess': <function copy at 0x7fa8d137cae8>, 'p_arg': (), 'transform': <function copy at 0x7fa8d137cae8>, 't_arg': (), 'query': <function query_count_colors at 0x7fa8cd36f2f0>, 'q_arg': ()}
####### training XGBSingleColorSolver
training/27a28665.json   | False -> False | [1 2 2 3 3 1 6] -> [1 1 3 3 3 1 6] | [6 1 2] -> [3 3 3]
training/445eab21.json   | True  -> False | [8 7 4] -> [8 7 4] | [3] -> [4]
training/44f52bb0.json   | False -> True  | [1 7 1 1 7 7] -> [1 7 1 7 7 7] | [1 7] -> [1 7]
training/5582e5ca.json   | True  -> False | [4 9 6] -> [4 9 6] | [8] -> [6]
####### training XGBGridSolver
guess : training/00d62c1b.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/05269061.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/05f2a901.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/08ed6ac7.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/09629e4f.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/0962bcdd.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/0a938d79.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: training/0d3d703e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/0e206a2e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/11852cab.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/150deff5.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: training/178fcbfb.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/1b60fb0c.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/1bfc4729.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/1caeab9d.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/1e32b0e9.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/1f0c79e5.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/2204b7a8.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/22233c11.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: training/2281f1f4.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/228f6490.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/23581191.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/253bf280.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/25d487eb.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: training/25ff71a9.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/272f95fa.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/29623171.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/2bcee788.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: training/2bee17df.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/2c608aff.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/2dd70a9a.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: training/32597951.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/3345333e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: training/3618c87e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/3631a71a.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/36d67576.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/36fdfd69.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/3906de3d.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/3aa6fb7a.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/3bd67248.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/3befdf3e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/40853293.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/41e4d17e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/4258a5f9.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/42a50994.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/447fd412.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/44d8ac46.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/4612dd53.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/4938f0c2.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/496994bd.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/4c5c2cf0.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/50846271.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/508bd3b6.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/5168d44c.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/543a7ed5.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/5521c0d9.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/56dc2b01.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/5c0a986e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/5c2c9af4.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/60b61512.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/623ea044.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/6455b5f5.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: training/67385a82.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/673ef223.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/67a3c6ac.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/67a423a3.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/6855a6e4.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/68b16354.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/694f12f3.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/6a1e5592.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/6aa20dc0.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/6c434453.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/6cdd2623.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/6cf79266.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/6d58a25d.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: training/6d75e8bb.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/6e19193c.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/6e82a1ae.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/7447852a.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/74dd1130.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/760b3cac.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/776ffc46.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/7b6016b9.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/7ddcd7ec.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/7df24a62.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/7e0986d6.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/7f4411dc.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/810b9b61.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/83302e8f.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/834ec97d.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/8403a5d5.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/868de0fa.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/88a10436.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/890034e9.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/8d510a79.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/8e5a5113.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/8eb1be9a.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/8f2ea7aa.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/90f3ed37.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/91714a58.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/928ad970.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/93b581b8.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/941d9a10.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/952a094c.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/95990924.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/98cf29f8.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/9edfc990.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/a1570a43.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: training/a2fd1cf0.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/a48eeaf7.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/a5313dff.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/a5f85a15.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/a61f2674.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/a64e4611.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/a65b410d.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: training/a699fb00.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/a78176bb.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/a85d4709.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/a8d7556c.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/a9f96cdd.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/aabf363d.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/aba27056.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/ae3edfdc.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/aedd82e4.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/af902bf9.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/b230c067.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/b27ca6d3.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/b2862040.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/b527c5c6.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/b548a754.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/b60334d2.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: training/b6afb2da.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/b7249182.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/b782dc8a.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/b8cdaf2b.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/ba26e723.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/ba97ae07.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: training/bb43febb.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/bda2d7a6.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: training/bdad9b1f.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/c0f76784.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/c1d99e64.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: training/c8f0f002.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/ce9e57f2.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/d06dbe63.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/d07ae81c.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/d2abd087.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: training/d364b489.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/d406998b.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/d4a91cb9.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/d4f3cd78.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/d6ad076f.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/d89b689b.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/d90796e8.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/d9f24cd1.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/db3e9e38.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/db93a21d.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/dbc1a6ce.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: training/dc433765.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/ddf7fa4f.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/e26a3af2.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/e40b9e2f.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/e48d4e1a.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/e5062a87.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/e509e548.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/e73095fd.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/e76a88a6.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/e8593010.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/e8dc4411.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/e9614598.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/e9afcf9a.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/ea32f347.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/ea786f4a.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/ec883f72.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/ecdecbb3.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/ed36ccf7.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: training/ef135b50.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/f15e1fac.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/f1cefba8.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/f35d900a.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/f76d97a5.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/f8a8fe49.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : training/f8c80d96.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
####### evaluation GlobSolver
####### evaluation DoNothingSolver
####### evaluation BorderSolver
####### evaluation GeometrySolver
####### evaluation SingleColorSolver
####### evaluation ZoomSolver
####### evaluation TessellationSolver
solved: evaluation/27f8ce4f.json TessellationSolver {'preprocess': <function copy at 0x7fa8d137cae8>, 'p_arg': (), 'transform': <function copy at 0x7fa8d137cae8>, 't_arg': (), 'query': <function query_max_color at 0x7fa8cd38bae8>, 'q_arg': ()}
solved: evaluation/5b6cbef5.json TessellationSolver {'preprocess': <function copy at 0x7fa8d137cae8>, 'p_arg': (), 'transform': <function copy at 0x7fa8d137cae8>, 't_arg': (), 'query': <function query_not_zero at 0x7fa8cd38b8c8>, 'q_arg': ()}
####### evaluation XGBSingleColorSolver
evaluation/3194b014.json | True  -> False | [4 3 8] -> [4 3 8] | [5] -> [4]
####### evaluation XGBGridSolver
guess : evaluation/009d5c81.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/00dbd492.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/05a7bcf2.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/070dd51e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/08573cc6.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/0a2355a6.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/0becf7df.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/0d87d2a6.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/0e671a1a.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/11e1fe23.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/137f0df0.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/140c817e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/14754a24.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/15113be4.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/15663ba9.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/17cae0c1.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/18419cfa.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/1acc24af.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/1c56ad9f.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/20981f0e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/212895b5.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: evaluation/21f83797.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/22a4bbc2.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/25094a63.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/292dd178.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/29700607.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/2b01abd0.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: evaluation/319f2597.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/31adaf00.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/3391f8c0.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/3490cc26.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/37d3e8b2.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/3a301edc.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/3f23242b.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/423a55dc.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/456873bc.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/47996f11.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/4acc7107.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/4cd1b7b2.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/4e45f183.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/4e469f39.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/4f537728.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/4ff4c9da.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/50f325b5.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/516b51b7.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/5207a7b5.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/54db823b.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/55059096.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/551d5bf1.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/575b1a71.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/58743b76.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/58e15b12.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: evaluation/5b526a93.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/604001fa.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/60a26a3e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/626c0bcc.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/62ab2642.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/639f5a19.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/642248e4.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/692cd3b6.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/696d4842.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/712bf12e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/73c3b0d8.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/759f3fd3.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/770cc55f.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/782b5218.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/79369cc6.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/79fb03f4.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/7c8af763.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/7d419a02.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/7e02026e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/7ee1c6ea.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/817e6c09.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/84db8fc4.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/85b81ff1.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/85fa5666.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/891232d6.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/896d5239.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/8a371977.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/8ee62060.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/8fbca751.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/917bccba.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/92e50de0.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/9356391f.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/93c31fbe.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/94414823.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/95a58926.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/96a8c0cd.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/9772c176.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/992798f6.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/9b4c17c4.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/9c56f360.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/9caba7c3.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/9ddd00f0.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/9def23fe.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/9f27f097.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/a04b2602.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/a3f84088.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/a8610ef7.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/a934301b.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/aa18de87.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/aa300dc3.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/aa4ec2a5.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/ac0c5833.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/ac3e2b04.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/ae58858e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/b15fca0b.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/baf41dbf.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/bb52a14b.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/bcb3040b.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/bf32578f.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/bf89d739.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/c074846d.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/c35c1b4c.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/c62e2108.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/c87289bb.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/c97c0139.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/cb227835.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/ce039d91.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/d304284e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/d37a1ef5.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/d492a647.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/d931c21c.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/d94c3b52.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: evaluation/da2b0fe3.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/dc2aa30b.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/dc2e9a9d.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/dd2401ed.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/e0fb7511.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/e1d2900e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/e2092e0c.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/e4075551.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/e760a62e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/e7639916.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: evaluation/e7dd8335.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/e9c9d9a1.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/ecaa0ec1.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/ef26cbf6.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/f3cdc58f.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/f3e62deb.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
solved: evaluation/f45f5ca7.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/f823c43c.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/f83cb3f6.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/f9a67cb5.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/f9d67f8b.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/fd4b2b02.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/fe9372f3.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/fea12743.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
guess : evaluation/ff72ca3e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
####### test GlobSolver
test  : test/00576224.json GlobSolver ('evaluation/00576224.json',)
test  : test/009d5c81.json GlobSolver ('evaluation/009d5c81.json',)
test  : test/00dbd492.json GlobSolver ('evaluation/00dbd492.json',)
test  : test/03560426.json GlobSolver ('evaluation/03560426.json',)
test  : test/05a7bcf2.json GlobSolver ('evaluation/05a7bcf2.json',)
test  : test/0607ce86.json GlobSolver ('evaluation/0607ce86.json',)
test  : test/0692e18c.json GlobSolver ('evaluation/0692e18c.json',)
test  : test/070dd51e.json GlobSolver ('evaluation/070dd51e.json',)
test  : test/08573cc6.json GlobSolver ('evaluation/08573cc6.json',)
test  : test/0934a4d8.json GlobSolver ('evaluation/0934a4d8.json',)
test  : test/09c534e7.json GlobSolver ('evaluation/09c534e7.json',)
test  : test/0a1d4ef5.json GlobSolver ('evaluation/0a1d4ef5.json',)
test  : test/0a2355a6.json GlobSolver ('evaluation/0a2355a6.json',)
test  : test/0b17323b.json GlobSolver ('evaluation/0b17323b.json',)
test  : test/0bb8deee.json GlobSolver ('evaluation/0bb8deee.json',)
test  : test/0becf7df.json GlobSolver ('evaluation/0becf7df.json',)
test  : test/0c786b71.json GlobSolver ('evaluation/0c786b71.json',)
test  : test/0c9aba6e.json GlobSolver ('evaluation/0c9aba6e.json',)
test  : test/0d87d2a6.json GlobSolver ('evaluation/0d87d2a6.json',)
test  : test/0e671a1a.json GlobSolver ('evaluation/0e671a1a.json',)
test  : test/0f63c0b9.json GlobSolver ('evaluation/0f63c0b9.json',)
test  : test/103eff5b.json GlobSolver ('evaluation/103eff5b.json',)
test  : test/11e1fe23.json GlobSolver ('evaluation/11e1fe23.json',)
test  : test/12997ef3.json GlobSolver ('evaluation/12997ef3.json',)
test  : test/12eac192.json GlobSolver ('evaluation/12eac192.json',)
test  : test/136b0064.json GlobSolver ('evaluation/136b0064.json',)
test  : test/13713586.json GlobSolver ('evaluation/13713586.json',)
test  : test/137f0df0.json GlobSolver ('evaluation/137f0df0.json',)
test  : test/140c817e.json GlobSolver ('evaluation/140c817e.json',)
test  : test/14754a24.json GlobSolver ('evaluation/14754a24.json',)
test  : test/15113be4.json GlobSolver ('evaluation/15113be4.json',)
test  : test/15663ba9.json GlobSolver ('evaluation/15663ba9.json',)
test  : test/15696249.json GlobSolver ('evaluation/15696249.json',)
test  : test/16b78196.json GlobSolver ('evaluation/16b78196.json',)
test  : test/17b80ad2.json GlobSolver ('evaluation/17b80ad2.json',)
test  : test/17cae0c1.json GlobSolver ('evaluation/17cae0c1.json',)
test  : test/18419cfa.json GlobSolver ('evaluation/18419cfa.json',)
test  : test/184a9768.json GlobSolver ('evaluation/184a9768.json',)
test  : test/195ba7dc.json GlobSolver ('evaluation/195ba7dc.json',)
test  : test/1990f7a8.json GlobSolver ('evaluation/1990f7a8.json',)
test  : test/19bb5feb.json GlobSolver ('evaluation/19bb5feb.json',)
test  : test/1a2e2828.json GlobSolver ('evaluation/1a2e2828.json',)
test  : test/1a6449f1.json GlobSolver ('evaluation/1a6449f1.json',)
test  : test/1acc24af.json GlobSolver ('evaluation/1acc24af.json',)
test  : test/1c02dbbe.json GlobSolver ('evaluation/1c02dbbe.json',)
test  : test/1c0d0a4b.json GlobSolver ('evaluation/1c0d0a4b.json',)
test  : test/1c56ad9f.json GlobSolver ('evaluation/1c56ad9f.json',)
test  : test/1d0a4b61.json GlobSolver ('evaluation/1d0a4b61.json',)
test  : test/1d398264.json GlobSolver ('evaluation/1d398264.json',)
test  : test/1da012fc.json GlobSolver ('evaluation/1da012fc.json',)
test  : test/1e81d6f9.json GlobSolver ('evaluation/1e81d6f9.json',)
test  : test/1e97544e.json GlobSolver ('evaluation/1e97544e.json',)
test  : test/2037f2c7.json GlobSolver ('evaluation/2037f2c7.json',)
test  : test/20818e16.json GlobSolver ('evaluation/20818e16.json',)
test  : test/20981f0e.json GlobSolver ('evaluation/20981f0e.json',)
test  : test/212895b5.json GlobSolver ('evaluation/212895b5.json',)
test  : test/21f83797.json GlobSolver ('evaluation/21f83797.json',)
test  : test/22a4bbc2.json GlobSolver ('evaluation/22a4bbc2.json',)
test  : test/25094a63.json GlobSolver ('evaluation/25094a63.json',)
test  : test/2546ccf6.json GlobSolver ('evaluation/2546ccf6.json',)
test  : test/256b0a75.json GlobSolver ('evaluation/256b0a75.json',)
test  : test/2685904e.json GlobSolver ('evaluation/2685904e.json',)
test  : test/2697da3f.json GlobSolver ('evaluation/2697da3f.json',)
test  : test/2753e76c.json GlobSolver ('evaluation/2753e76c.json',)
test  : test/27a77e38.json GlobSolver ('evaluation/27a77e38.json',)
test  : test/27f8ce4f.json GlobSolver ('evaluation/27f8ce4f.json',)
test  : test/281123b4.json GlobSolver ('evaluation/281123b4.json',)
test  : test/292dd178.json GlobSolver ('evaluation/292dd178.json',)
test  : test/29700607.json GlobSolver ('evaluation/29700607.json',)
test  : test/2a5f8217.json GlobSolver ('evaluation/2a5f8217.json',)
test  : test/2b01abd0.json GlobSolver ('evaluation/2b01abd0.json',)
test  : test/2c0b0aff.json GlobSolver ('evaluation/2c0b0aff.json',)
test  : test/2c737e39.json GlobSolver ('evaluation/2c737e39.json',)
test  : test/2f0c5170.json GlobSolver ('evaluation/2f0c5170.json',)
test  : test/310f3251.json GlobSolver ('evaluation/310f3251.json',)
test  : test/3194b014.json GlobSolver ('evaluation/3194b014.json',)
test  : test/319f2597.json GlobSolver ('evaluation/319f2597.json',)
test  : test/31adaf00.json GlobSolver ('evaluation/31adaf00.json',)
test  : test/31d5ba1a.json GlobSolver ('evaluation/31d5ba1a.json',)
test  : test/32e9702f.json GlobSolver ('evaluation/32e9702f.json',)
test  : test/332efdb3.json GlobSolver ('evaluation/332efdb3.json',)
test  : test/3391f8c0.json GlobSolver ('evaluation/3391f8c0.json',)
test  : test/33b52de3.json GlobSolver ('evaluation/33b52de3.json',)
test  : test/3490cc26.json GlobSolver ('evaluation/3490cc26.json',)
test  : test/34b99a2b.json GlobSolver ('evaluation/34b99a2b.json',)
test  : test/351d6448.json GlobSolver ('evaluation/351d6448.json',)
test  : test/358ba94e.json GlobSolver ('evaluation/358ba94e.json',)
test  : test/37d3e8b2.json GlobSolver ('evaluation/37d3e8b2.json',)
test  : test/3979b1a8.json GlobSolver ('evaluation/3979b1a8.json',)
test  : test/3a301edc.json GlobSolver ('evaluation/3a301edc.json',)
test  : test/3b4c2228.json GlobSolver ('evaluation/3b4c2228.json',)
test  : test/3d31c5b3.json GlobSolver ('evaluation/3d31c5b3.json',)
test  : test/3ed85e70.json GlobSolver ('evaluation/3ed85e70.json',)
test  : test/3ee1011a.json GlobSolver ('evaluation/3ee1011a.json',)
test  : test/3f23242b.json GlobSolver ('evaluation/3f23242b.json',)
test  : test/40f6cd08.json GlobSolver ('evaluation/40f6cd08.json',)
test  : test/414297c0.json GlobSolver ('evaluation/414297c0.json',)
test  : test/423a55dc.json GlobSolver ('evaluation/423a55dc.json',)
####### test DoNothingSolver
####### test BorderSolver
####### test GeometrySolver
####### test SingleColorSolver
####### test ZoomSolver
####### test TessellationSolver
test  : test/27f8ce4f.json TessellationSolver {'preprocess': <function copy at 0x7fa8d137cae8>, 'p_arg': (), 'transform': <function copy at 0x7fa8d137cae8>, 't_arg': (), 'query': <function query_max_color at 0x7fa8cd38bae8>, 'q_arg': ()}
####### test XGBSingleColorSolver
test/3194b014.json       | True  -> False | [4 3 8] -> [4 3 8] | [] -> [4]
####### test XGBGridSolver
test  : test/009d5c81.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/00dbd492.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/05a7bcf2.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/070dd51e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/08573cc6.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/0a2355a6.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/0becf7df.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/0d87d2a6.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/0e671a1a.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/11e1fe23.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/137f0df0.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/140c817e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/14754a24.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/15113be4.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/15663ba9.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/17cae0c1.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/18419cfa.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/1acc24af.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/1c56ad9f.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/20981f0e.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/212895b5.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/21f83797.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/22a4bbc2.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/25094a63.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/292dd178.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/29700607.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/2b01abd0.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/319f2597.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/31adaf00.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/3391f8c0.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/3490cc26.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/37d3e8b2.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/3a301edc.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/3f23242b.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}
test  : test/423a55dc.json XGBGridSolver {'tree_method': 'exact', 'eval_metric': 'error', 'objective': 'reg:squarederror', 'n_estimators': 32, 'max_depth': 100, 'min_child_weight': 0}

wrote: /home/jamie/code/kaggle-arc/./submission/submission5.csv | 105 lines

wrote: /home/jamie/code/kaggle-arc/./submission/submission.csv | 105 lines
--------------------
Solver Scores:

# training
183 XGBGridSolver
8 GeometrySolver
4 TessellationSolver
2 SingleColorSolver
2 ZoomSolver

# evaluation
149 XGBGridSolver
2 ZoomSolver
2 TessellationSolver

# test
98 GlobSolver
35 XGBGridSolver
1 TessellationSolver
--------------------
Dataset Scores:
training   : {'correct': 34, 'guesses': 198, 'total': 416, 'error': 0.9183, 'time': '00:02:36', 'name': 'training'}
evaluation : {'correct': 10, 'guesses': 157, 'total': 419, 'error': 0.9761, 'time': '00:03:55', 'name': 'evaluation'}
test       : {'correct': 6.5, 'guesses': 102, 'total': 104, 'error': 1.0, 'time': '00:00:57', 'name': 'test'}
time       : 00:07:28
