{'score': 5, 'time': 181, 'booster': 'dart', 'eval_metric': 'error', 'grow_policy': 'lossguide', 'objective': 'reg:squaredlogerror', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}{'score': 7, 'time': 128, 'booster': 'gbtree', 'eval_metric': 'ndcg', 'grow_policy': 'depthwise', 'objective': 'reg:squarederror', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 7, 'time': 304, 'booster': 'gbtree', 'eval_metric': 'aucpr', 'grow_policy': 'lossguide', 'objective': 'reg:squarederror', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 5, 'time': 181, 'booster': 'gbtree', 'eval_metric': 'ndcg', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 7, 'time': 162, 'booster': 'dart', 'eval_metric': 'gamma-nloglik', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}{'score': 4, 'time': 180, 'booster': 'gbtree', 'eval_metric': 'aucpr', 'grow_policy': 'lossguide', 'objective': 'reg:squarederror', 'sampling_method': 'uniform', 'tree_method': 'approx'}{'score': 6, 'time': 182, 'booster': 'dart', 'eval_metric': 'logloss', 'grow_policy': 'depthwise', 'objective': 'reg:squarederror', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}{'score': 4, 'time': 180, 'booster': 'dart', 'eval_metric': 'gamma-deviance', 'grow_policy': 'depthwise', 'objective': 'reg:squarederror', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}{'score': 7, 'time': 178, 'booster': 'dart', 'eval_metric': 'poisson-nloglik', 'grow_policy': 'depthwise', 'objective': 'count:poisson', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}{'score': 4, 'time': 181, 'booster': 'gbtree', 'eval_metric': 'map', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}{'score': 6, 'time': 211, 'booster': 'gbtree', 'eval_metric': 'error', 'grow_policy': 'depthwise', 'objective': 'reg:gamma', 'sampling_method': 'uniform', 'tree_method': 'approx'}{'score': 7, 'time': 180, 'booster': 'dart', 'eval_metric': 'gamma-nloglik', 'grow_policy': 'depthwise', 'objective': 'reg:squarederror', 'sampling_method': 'gradient_based', 'tree_method': 'exact'}{'score': 0, 'time': 1, 'booster': 'gbtree', 'eval_metric': 'tweedie-nlogli', 'grow_policy': 'depthwise', 'objective': 'reg:tweedie', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}{'score': 6, 'time': 217, 'booster': 'gbtree', 'eval_metric': 'aucpr', 'grow_policy': 'depthwise', 'objective': 'reg:gamma', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}{'score': 4, 'time': 181, 'booster': 'dart', 'eval_metric': 'poisson-nloglik', 'grow_policy': 'depthwise', 'objective': 'reg:tweedie', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 7, 'time': 42, 'booster': 'gbtree', 'eval_metric': 'aucpr', 'grow_policy': 'lossguide', 'objective': 'reg:squaredlogerror', 'sampling_method': 'uniform', 'tree_method': 'hist'}{'score': 6, 'time': 148, 'booster': 'dart', 'eval_metric': 'logloss', 'grow_policy': 'lossguide', 'objective': 'survival:cox', 'sampling_method': 'uniform', 'tree_method': 'hist'}{'score': 7, 'time': 234, 'booster': 'dart', 'eval_metric': 'aucpr', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'uniform', 'tree_method': 'approx'}{'score': 4, 'time': 180, 'booster': 'dart', 'eval_metric': 'merror', 'grow_policy': 'depthwise', 'objective': 'reg:logistic', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}{'score': 7, 'time': 63, 'booster': 'dart', 'eval_metric': 'error', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}{'score': 7, 'time': 142, 'booster': 'gbtree', 'eval_metric': 'gamma-deviance', 'grow_policy': 'lossguide', 'objective': 'reg:squaredlogerror', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}{'score': 6, 'time': 131, 'booster': 'gbtree', 'eval_metric': 'error', 'grow_policy': 'lossguide', 'objective': 'reg:tweedie', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}{'score': 6, 'time': 180, 'booster': 'gbtree', 'eval_metric': 'logloss', 'grow_policy': 'lossguide', 'objective': 'reg:tweedie', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 6, 'time': 136, 'booster': 'gbtree', 'eval_metric': 'cox-nloglik', 'grow_policy': 'depthwise', 'objective': 'reg:tweedie', 'sampling_method': 'uniform', 'tree_method': 'hist'}{'score': 4, 'time': 181, 'booster': 'dart', 'eval_metric': 'ndcg', 'grow_policy': 'depthwise', 'objective': 'reg:squarederror', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 7, 'time': 135, 'booster': 'dart', 'eval_metric': 'gamma-nloglik', 'grow_policy': 'depthwise', 'objective': 'reg:logistic', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 6, 'time': 181, 'booster': 'dart', 'eval_metric': 'ndcg', 'grow_policy': 'depthwise', 'objective': 'reg:squarederror', 'sampling_method': 'gradient_based', 'tree_method': 'exact'}{'score': 4, 'time': 180, 'booster': 'gbtree', 'eval_metric': 'ndcg', 'grow_policy': 'lossguide', 'objective': 'survival:cox', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 7, 'time': 111, 'booster': 'gbtree', 'eval_metric': 'merror', 'grow_policy': 'lossguide', 'objective': 'reg:squarederror', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 7, 'time': 183, 'booster': 'dart', 'eval_metric': 'poisson-nloglik', 'grow_policy': 'depthwise', 'objective': 'reg:squaredlogerror', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}{'score': 7, 'time': 137, 'booster': 'dart', 'eval_metric': 'poisson-nloglik', 'grow_policy': 'lossguide', 'objective': 'reg:squaredlogerror', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}{'score': 0, 'time': 2, 'booster': 'gbtree', 'eval_metric': 'tweedie-nlogli', 'grow_policy': 'lossguide', 'objective': 'reg:squaredlogerror', 'sampling_method': 'uniform', 'tree_method': 'hist'}{'score': 4, 'time': 180, 'booster': 'gbtree', 'eval_metric': 'aucpr', 'grow_policy': 'lossguide', 'objective': 'reg:squaredlogerror', 'sampling_method': 'uniform', 'tree_method': 'approx'}{'score': 7, 'time': 124, 'booster': 'gbtree', 'eval_metric': 'gamma-deviance', 'grow_policy': 'depthwise', 'objective': 'reg:logistic', 'sampling_method': 'gradient_based', 'tree_method': 'exact'}{'score': 6, 'time': 170, 'booster': 'gbtree', 'eval_metric': 'gamma-deviance', 'grow_policy': 'lossguide', 'objective': 'reg:gamma', 'sampling_method': 'uniform', 'tree_method': 'hist'}{'score': 4, 'time': 180, 'booster': 'dart', 'eval_metric': 'aucpr', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'uniform', 'tree_method': 'approx'}{'score': 7, 'time': 162, 'booster': 'dart', 'eval_metric': 'aucpr', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'uniform', 'tree_method': 'approx'}{'score': 4, 'time': 180, 'booster': 'dart', 'eval_metric': 'gamma-nloglik', 'grow_policy': 'depthwise', 'objective': 'reg:squarederror', 'sampling_method': 'gradient_based', 'tree_method': 'exact'}{'score': 7, 'time': 120, 'booster': 'dart', 'eval_metric': 'gamma-nloglik', 'grow_policy': 'depthwise', 'objective': 'reg:squarederror', 'sampling_method': 'gradient_based', 'tree_method': 'exact'}{'score': 7, 'time': 277, 'booster': 'dart', 'eval_metric': 'error', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}{'score': 7, 'time': 125, 'booster': 'dart', 'eval_metric': 'map', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'uniform', 'tree_method': 'hist'}{'score': 3, 'time': 181, 'booster': 'gbtree', 'eval_metric': 'gamma-deviance', 'grow_policy': 'lossguide', 'objective': 'survival:cox', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}{'score': 6, 'time': 113, 'booster': 'gbtree', 'eval_metric': 'merror', 'grow_policy': 'lossguide', 'objective': 'reg:gamma', 'sampling_method': 'gradient_based', 'tree_method': 'exact'}{'score': 7, 'time': 179, 'booster': 'gbtree', 'eval_metric': 'merror', 'grow_policy': 'depthwise', 'objective': 'reg:logistic', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 4, 'time': 180, 'booster': 'gbtree', 'eval_metric': 'merror', 'grow_policy': 'depthwise', 'objective': 'reg:logistic', 'sampling_method': 'gradient_based', 'tree_method': 'exact'}{'score': 7, 'time': 126, 'booster': 'gbtree', 'eval_metric': 'cox-nloglik', 'grow_policy': 'depthwise', 'objective': 'reg:logistic', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 4, 'time': 180, 'booster': 'gbtree', 'eval_metric': 'gamma-deviance', 'grow_policy': 'depthwise', 'objective': 'reg:logistic', 'sampling_method': 'gradient_based', 'tree_method': 'exact'}{'score': 7, 'time': 132, 'booster': 'gbtree', 'eval_metric': 'merror', 'grow_policy': 'depthwise', 'objective': 'reg:squarederror', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 7, 'time': 242, 'booster': 'gbtree', 'eval_metric': 'merror', 'grow_policy': 'depthwise', 'objective': 'reg:squarederror', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 4, 'time': 184, 'booster': 'dart', 'eval_metric': 'map', 'grow_policy': 'depthwise', 'objective': 'reg:logistic', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}{'score': 0, 'time': 0, 'booster': 'dart', 'eval_metric': 'tweedie-nlogli', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}{'score': 6, 'time': 140, 'booster': 'dart', 'eval_metric': 'gamma-nloglik', 'grow_policy': 'depthwise', 'objective': 'survival:cox', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 7, 'time': 167, 'booster': 'dart', 'eval_metric': 'gamma-nloglik', 'grow_policy': 'lossguide', 'objective': 'reg:logistic', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 7, 'time': 99, 'booster': 'gbtree', 'eval_metric': 'logloss', 'grow_policy': 'lossguide', 'objective': 'reg:squaredlogerror', 'sampling_method': 'uniform', 'tree_method': 'hist'}{'score': 7, 'time': 97, 'booster': 'gbtree', 'eval_metric': 'aucpr', 'grow_policy': 'lossguide', 'objective': 'reg:squaredlogerror', 'sampling_method': 'uniform', 'tree_method': 'hist'}{'score': 6, 'time': 180, 'booster': 'dart', 'eval_metric': 'gamma-deviance', 'grow_policy': 'depthwise', 'objective': 'count:poisson', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}{'score': 7, 'time': 163, 'booster': 'gbtree', 'eval_metric': 'cox-nloglik', 'grow_policy': 'depthwise', 'objective': 'reg:logistic', 'sampling_method': 'gradient_based', 'tree_method': 'exact'}{'score': 4, 'time': 180, 'booster': 'gbtree', 'eval_metric': 'gamma-deviance', 'grow_policy': 'depthwise', 'objective': 'reg:gamma', 'sampling_method': 'gradient_based', 'tree_method': 'exact'}--------------------------------------------------##### ResultsTime elapsed:  9106.810882091522Parameter combinations evaluated:  50Score best parameters:  0--------------------Best parameters: booster = gbtree streval_metric = aucpr strgrow_policy = depthwise strobjective = reg:squarederror strsampling_method = uniform strtree_method = exact str--------------------training   : {'correct': 19, 'guesses': 239, 'total': 416, 'error': 0.9543, 'time': '00:01:51', 'name': 'training'}evaluation : {'correct': 7, 'guesses': 262, 'total': 419, 'error': 0.9833, 'time': '00:02:55', 'name': 'evaluation'}test       : {'correct': 1.7, 'guesses': 63, 'total': 104, 'error': 1.0, 'time': '00:00:34', 'name': 'test'}time       : 00:05:20