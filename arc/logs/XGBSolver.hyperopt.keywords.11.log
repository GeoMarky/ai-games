{'score': 5, 'time': 181, 'booster': 'dart', 'eval_metric': 'error', 'grow_policy': 'lossguide', 'objective': 'reg:squaredlogerror', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}{'score': 7, 'time': 130, 'booster': 'gbtree', 'eval_metric': 'ndcg', 'grow_policy': 'depthwise', 'objective': 'reg:squarederror', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 4, 'time': 181, 'booster': 'gbtree', 'eval_metric': 'aucpr', 'grow_policy': 'lossguide', 'objective': 'reg:squarederror', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 6, 'time': 182, 'booster': 'gbtree', 'eval_metric': 'ndcg', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 7, 'time': 289, 'booster': 'dart', 'eval_metric': 'gamma-nloglik', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}{'score': 4, 'time': 180, 'booster': 'gbtree', 'eval_metric': 'aucpr', 'grow_policy': 'lossguide', 'objective': 'reg:squarederror', 'sampling_method': 'uniform', 'tree_method': 'approx'}{'score': 7, 'time': 165, 'booster': 'dart', 'eval_metric': 'logloss', 'grow_policy': 'depthwise', 'objective': 'reg:squarederror', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}{'score': 4, 'time': 180, 'booster': 'dart', 'eval_metric': 'gamma-deviance', 'grow_policy': 'depthwise', 'objective': 'reg:squarederror', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}{'score': 6, 'time': 55, 'booster': 'gbtree', 'eval_metric': 'ndcg', 'grow_policy': 'depthwise', 'objective': 'reg:tweedie', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}{'score': 6, 'time': 167, 'booster': 'gbtree', 'eval_metric': 'error', 'grow_policy': 'lossguide', 'objective': 'survival:cox', 'sampling_method': 'uniform', 'tree_method': 'hist'}{'score': 7, 'time': 151, 'booster': 'dart', 'eval_metric': 'logloss', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'uniform', 'tree_method': 'hist'}{'score': 6, 'time': 195, 'booster': 'gbtree', 'eval_metric': 'ndcg', 'grow_policy': 'lossguide', 'objective': 'reg:tweedie', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 5, 'time': 182, 'booster': 'gbtree', 'eval_metric': 'merror', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 6, 'time': 36, 'booster': 'gbtree', 'eval_metric': 'ndcg', 'grow_policy': 'depthwise', 'objective': 'reg:tweedie', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}{'score': 0, 'time': 0, 'booster': 'gbtree', 'eval_metric': 'tweedie-nlogli', 'grow_policy': 'lossguide', 'objective': 'reg:tweedie', 'sampling_method': 'uniform', 'tree_method': 'hist'}{'score': 7, 'time': 170, 'booster': 'gbtree', 'eval_metric': 'error', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'gradient_based', 'tree_method': 'exact'}{'score': 6, 'time': 181, 'booster': 'gbtree', 'eval_metric': 'gamma-deviance', 'grow_policy': 'lossguide', 'objective': 'reg:logistic', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 6, 'time': 141, 'booster': 'gbtree', 'eval_metric': 'gamma-nloglik', 'grow_policy': 'depthwise', 'objective': 'reg:gamma', 'sampling_method': 'uniform', 'tree_method': 'hist'}{'score': 4, 'time': 181, 'booster': 'gbtree', 'eval_metric': 'map', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'uniform', 'tree_method': 'approx'}{'score': 7, 'time': 48, 'booster': 'dart', 'eval_metric': 'poisson-nloglik', 'grow_policy': 'depthwise', 'objective': 'reg:logistic', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}{'score': 7, 'time': 113, 'booster': 'gbtree', 'eval_metric': 'logloss', 'grow_policy': 'depthwise', 'objective': 'count:poisson', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}{'score': 6, 'time': 119, 'booster': 'gbtree', 'eval_metric': 'gamma-deviance', 'grow_policy': 'lossguide', 'objective': 'reg:tweedie', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}{'score': 0, 'time': 0, 'booster': 'dart', 'eval_metric': 'tweedie-nlogli', 'grow_policy': 'lossguide', 'objective': 'reg:gamma', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}{'score': 7, 'time': 141, 'booster': 'gbtree', 'eval_metric': 'logloss', 'grow_policy': 'depthwise', 'objective': 'reg:squaredlogerror', 'sampling_method': 'uniform', 'tree_method': 'hist'}{'score': 7, 'time': 195, 'booster': 'gbtree', 'eval_metric': 'cox-nloglik', 'grow_policy': 'depthwise', 'objective': 'reg:squaredlogerror', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 3, 'time': 180, 'booster': 'dart', 'eval_metric': 'gamma-nloglik', 'grow_policy': 'depthwise', 'objective': 'survival:cox', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}{'score': 7, 'time': 143, 'booster': 'gbtree', 'eval_metric': 'logloss', 'grow_policy': 'depthwise', 'objective': 'reg:squaredlogerror', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 4, 'time': 180, 'booster': 'gbtree', 'eval_metric': 'poisson-nloglik', 'grow_policy': 'depthwise', 'objective': 'reg:squaredlogerror', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 7, 'time': 126, 'booster': 'gbtree', 'eval_metric': 'merror', 'grow_policy': 'depthwise', 'objective': 'reg:squaredlogerror', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 4, 'time': 180, 'booster': 'dart', 'eval_metric': 'map', 'grow_policy': 'depthwise', 'objective': 'reg:squarederror', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 7, 'time': 76, 'booster': 'dart', 'eval_metric': 'cox-nloglik', 'grow_policy': 'lossguide', 'objective': 'reg:squarederror', 'sampling_method': 'uniform', 'tree_method': 'hist'}{'score': 6, 'time': 180, 'booster': 'gbtree', 'eval_metric': 'error', 'grow_policy': 'lossguide', 'objective': 'survival:cox', 'sampling_method': 'gradient_based', 'tree_method': 'exact'}{'score': 5, 'time': 181, 'booster': 'gbtree', 'eval_metric': 'error', 'grow_policy': 'lossguide', 'objective': 'reg:logistic', 'sampling_method': 'gradient_based', 'tree_method': 'exact'}{'score': 7, 'time': 60, 'booster': 'dart', 'eval_metric': 'error', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}{'score': 6, 'time': 181, 'booster': 'dart', 'eval_metric': 'logloss', 'grow_policy': 'depthwise', 'objective': 'reg:squaredlogerror', 'sampling_method': 'uniform', 'tree_method': 'hist'}{'score': 6, 'time': 135, 'booster': 'dart', 'eval_metric': 'logloss', 'grow_policy': 'depthwise', 'objective': 'reg:gamma', 'sampling_method': 'uniform', 'tree_method': 'hist'}{'score': 7, 'time': 127, 'booster': 'dart', 'eval_metric': 'aucpr', 'grow_policy': 'depthwise', 'objective': 'reg:squaredlogerror', 'sampling_method': 'uniform', 'tree_method': 'hist'}{'score': 7, 'time': 181, 'booster': 'gbtree', 'eval_metric': 'cox-nloglik', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'gradient_based', 'tree_method': 'exact'}{'score': 7, 'time': 235, 'booster': 'gbtree', 'eval_metric': 'cox-nloglik', 'grow_policy': 'depthwise', 'objective': 'reg:squaredlogerror', 'sampling_method': 'gradient_based', 'tree_method': 'exact'}{'score': 7, 'time': 113, 'booster': 'dart', 'eval_metric': 'poisson-nloglik', 'grow_policy': 'depthwise', 'objective': 'reg:logistic', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}{'score': 4, 'time': 181, 'booster': 'dart', 'eval_metric': 'poisson-nloglik', 'grow_policy': 'lossguide', 'objective': 'reg:logistic', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}{'score': 7, 'time': 185, 'booster': 'gbtree', 'eval_metric': 'logloss', 'grow_policy': 'depthwise', 'objective': 'count:poisson', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}{'score': 6, 'time': 239, 'booster': 'gbtree', 'eval_metric': 'logloss', 'grow_policy': 'depthwise', 'objective': 'survival:cox', 'sampling_method': 'gradient_based', 'tree_method': 'exact'}{'score': 7, 'time': 180, 'booster': 'gbtree', 'eval_metric': 'merror', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 6, 'time': 166, 'booster': 'gbtree', 'eval_metric': 'merror', 'grow_policy': 'lossguide', 'objective': 'reg:gamma', 'sampling_method': 'gradient_based', 'tree_method': 'exact'}{'score': 7, 'time': 200, 'booster': 'gbtree', 'eval_metric': 'cox-nloglik', 'grow_policy': 'lossguide', 'objective': 'reg:squaredlogerror', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 4, 'time': 180, 'booster': 'gbtree', 'eval_metric': 'aucpr', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'gradient_based', 'tree_method': 'exact'}{'score': 7, 'time': 171, 'booster': 'gbtree', 'eval_metric': 'logloss', 'grow_policy': 'depthwise', 'objective': 'reg:squaredlogerror', 'sampling_method': 'uniform', 'tree_method': 'approx'}{'score': 4, 'time': 180, 'booster': 'gbtree', 'eval_metric': 'cox-nloglik', 'grow_policy': 'lossguide', 'objective': 'reg:squaredlogerror', 'sampling_method': 'uniform', 'tree_method': 'approx'}{'score': 7, 'time': 104, 'booster': 'dart', 'eval_metric': 'cox-nloglik', 'grow_policy': 'lossguide', 'objective': 'reg:squarederror', 'sampling_method': 'uniform', 'tree_method': 'hist'}{'score': 7, 'time': 182, 'booster': 'dart', 'eval_metric': 'cox-nloglik', 'grow_policy': 'depthwise', 'objective': 'reg:squarederror', 'sampling_method': 'uniform', 'tree_method': 'hist'}{'score': 7, 'time': 120, 'booster': 'dart', 'eval_metric': 'error', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}{'score': 0, 'time': 0, 'booster': 'dart', 'eval_metric': 'tweedie-nlogli', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}{'score': 7, 'time': 267, 'booster': 'dart', 'eval_metric': 'ndcg', 'grow_policy': 'depthwise', 'objective': 'reg:squarederror', 'sampling_method': 'uniform', 'tree_method': 'approx'}{'score': 7, 'time': 169, 'booster': 'dart', 'eval_metric': 'map', 'grow_policy': 'depthwise', 'objective': 'reg:squarederror', 'sampling_method': 'uniform', 'tree_method': 'exact'}{'score': 7, 'time': 104, 'booster': 'dart', 'eval_metric': 'aucpr', 'grow_policy': 'depthwise', 'objective': 'reg:logistic', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}{'score': 6, 'time': 180, 'booster': 'dart', 'eval_metric': 'aucpr', 'grow_policy': 'lossguide', 'objective': 'reg:logistic', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}{'score': 6, 'time': 88, 'booster': 'gbtree', 'eval_metric': 'merror', 'grow_policy': 'lossguide', 'objective': 'reg:tweedie', 'sampling_method': 'gradient_based', 'tree_method': 'exact'}--------------------------------------------------##### ResultsTime elapsed:  8770.040679216385Parameter combinations evaluated:  50Score best parameters:  0--------------------Best parameters: booster = gbtree streval_metric = aucpr strgrow_policy = depthwise strobjective = reg:squarederror strsampling_method = uniform strtree_method = exact str--------------------training   : {'correct': 19, 'guesses': 239, 'total': 416, 'error': 0.9543, 'time': '00:01:50', 'name': 'training'}evaluation : {'correct': 7, 'guesses': 262, 'total': 419, 'error': 0.9833, 'time': '00:03:31', 'name': 'evaluation'}test       : {'correct': 1.7, 'guesses': 63, 'total': 104, 'error': 1.0, 'time': '00:00:42', 'name': 'test'}time       : 00:06:03