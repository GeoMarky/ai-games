{'score': -0.12, 'time': 120, 'booster': 'gbtree', 'eval_metric': 'mae', 'max_delta_step': 2, 'max_depth': 9, 'min_child_weight': 0, 'min_split_loss': 0.0, 'n_estimators': 18, 'num_parallel_tree': 25, 'objective': 'reg:logistic', 'tree_method': 'approx'}
{'score': -0.016, 'time': 16, 'booster': 'dart', 'eval_metric': 'aft-nloglik', 'max_delta_step': 5, 'max_depth': 6, 'min_child_weight': 0, 'min_split_loss': 0.0, 'n_estimators': 27, 'num_parallel_tree': 2, 'objective': 'survival:aft', 'tree_method': 'hist'}
{'score': -0.12, 'time': 120, 'booster': 'dart', 'eval_metric': 'auc', 'max_delta_step': 6, 'max_depth': 19, 'min_child_weight': 0, 'min_split_loss': 2795.302, 'n_estimators': 29, 'num_parallel_tree': 21, 'objective': 'reg:squarederror', 'tree_method': 'exact'}
{'score': -0.04, 'time': 40, 'booster': 'gbtree', 'eval_metric': 'rmsle', 'max_delta_step': 5, 'max_depth': 10, 'min_child_weight': 2, 'min_split_loss': 0.0, 'n_estimators': 20, 'num_parallel_tree': 36, 'objective': 'survival:aft', 'tree_method': 'hist'}
{'score': 2.88, 'time': 120, 'booster': 'dart', 'eval_metric': 'error', 'max_delta_step': 1, 'max_depth': 22, 'min_child_weight': 3, 'min_split_loss': 0.0, 'n_estimators': 21, 'num_parallel_tree': 29, 'objective': 'reg:logistic', 'tree_method': 'hist'}
{'score': -0.12, 'time': 120, 'booster': 'dart', 'eval_metric': 'error', 'max_delta_step': 1, 'max_depth': 9, 'min_child_weight': 0, 'min_split_loss': 0.001, 'n_estimators': 24, 'num_parallel_tree': 29, 'objective': 'survival:cox', 'tree_method': 'exact'}
{'score': -0.12, 'time': 120, 'booster': 'dart', 'eval_metric': 'error', 'max_delta_step': 4, 'max_depth': 18, 'min_child_weight': 2, 'min_split_loss': 73300228.384, 'n_estimators': 16, 'num_parallel_tree': 24, 'objective': 'reg:squaredlogerror', 'tree_method': 'exact'}
{'score': -0.12, 'time': 120, 'booster': 'dart', 'eval_metric': 'merror', 'max_delta_step': 9, 'max_depth': 23, 'min_child_weight': 1, 'min_split_loss': 0.0, 'n_estimators': 33, 'num_parallel_tree': 13, 'objective': 'count:poisson', 'tree_method': 'exact'}
{'score': -0.12, 'time': 120, 'booster': 'gbtree', 'eval_metric': 'gamma-deviance', 'max_delta_step': 6, 'max_depth': 5, 'min_child_weight': 1, 'min_split_loss': 700596.932, 'n_estimators': 18, 'num_parallel_tree': 24, 'objective': 'reg:logistic', 'tree_method': 'exact'}
{'score': 5.873, 'time': 127, 'booster': 'dart', 'eval_metric': 'rmsle', 'max_delta_step': 10, 'max_depth': 13, 'min_child_weight': 2, 'min_split_loss': 0.0, 'n_estimators': 29, 'num_parallel_tree': 1, 'objective': 'rank:pairwise', 'tree_method': 'hist'}
{'score': 0.0, 'time': 0, 'booster': 'gbtree', 'eval_metric': 'mphe', 'max_delta_step': 0, 'max_depth': 9, 'min_child_weight': 2, 'min_split_loss': 0.0, 'n_estimators': 30, 'num_parallel_tree': 18, 'objective': 'count:poisson', 'tree_method': 'approx'}
{'score': 1.88, 'time': 120, 'booster': 'dart', 'eval_metric': 'ndcg', 'max_delta_step': 9, 'max_depth': 25, 'min_child_weight': 1, 'min_split_loss': 0.0, 'n_estimators': 35, 'num_parallel_tree': 11, 'objective': 'reg:gamma', 'tree_method': 'hist'}
{'score': 0.0, 'time': 0, 'booster': 'dart', 'eval_metric': 'tweedie-nlogli', 'max_delta_step': 8, 'max_depth': 7, 'min_child_weight': 4, 'min_split_loss': 1092325994.185, 'n_estimators': 16, 'num_parallel_tree': 32, 'objective': 'rank:pairwise', 'tree_method': 'approx'}
{'score': 0.0, 'time': 0, 'booster': 'gbtree', 'eval_metric': 'tweedie-nlogli', 'max_delta_step': 5, 'max_depth': 12, 'min_child_weight': 2, 'min_split_loss': 0.097, 'n_estimators': 22, 'num_parallel_tree': 3, 'objective': 'reg:logistic', 'tree_method': 'approx'}
{'score': -0.12, 'time': 120, 'booster': 'dart', 'eval_metric': 'aft-nloglik', 'max_delta_step': 10, 'max_depth': 5, 'min_child_weight': 1, 'min_split_loss': 4753.331, 'n_estimators': 34, 'num_parallel_tree': 19, 'objective': 'survival:aft', 'tree_method': 'exact'}
{'score': -0.121, 'time': 121, 'booster': 'dart', 'eval_metric': 'gamma-deviance', 'max_delta_step': 10, 'max_depth': 24, 'min_child_weight': 2, 'min_split_loss': 711000.417, 'n_estimators': 28, 'num_parallel_tree': 26, 'objective': 'rank:pairwise', 'tree_method': 'approx'}
{'score': -0.12, 'time': 120, 'booster': 'gbtree', 'eval_metric': 'ndcg', 'max_delta_step': 7, 'max_depth': 21, 'min_child_weight': 2, 'min_split_loss': 114574884.611, 'n_estimators': 33, 'num_parallel_tree': 22, 'objective': 'reg:logistic', 'tree_method': 'hist'}
{'score': -0.12, 'time': 120, 'booster': 'dart', 'eval_metric': 'rmsle', 'max_delta_step': 6, 'max_depth': 12, 'min_child_weight': 2, 'min_split_loss': 0.043, 'n_estimators': 28, 'num_parallel_tree': 33, 'objective': 'rank:pairwise', 'tree_method': 'approx'}
{'score': 0.0, 'time': 0, 'booster': 'gbtree', 'eval_metric': 'tweedie-nlogli', 'max_delta_step': 4, 'max_depth': 10, 'min_child_weight': 4, 'min_split_loss': 0.002, 'n_estimators': 26, 'num_parallel_tree': 21, 'objective': 'reg:squarederror', 'tree_method': 'exact'}
{'score': 2.88, 'time': 120, 'booster': 'gbtree', 'eval_metric': 'gamma-nloglik', 'max_delta_step': 9, 'max_depth': 10, 'min_child_weight': 3, 'min_split_loss': 0.0, 'n_estimators': 28, 'num_parallel_tree': 9, 'objective': 'reg:gamma', 'tree_method': 'hist'}
{'score': 2.88, 'time': 120, 'booster': 'gbtree', 'eval_metric': 'ndcg', 'max_delta_step': 4, 'max_depth': 20, 'min_child_weight': 0, 'min_split_loss': 0.006, 'n_estimators': 26, 'num_parallel_tree': 4, 'objective': 'reg:squaredlogerror', 'tree_method': 'approx'}
{'score': -0.008, 'time': 8, 'booster': 'gbtree', 'eval_metric': 'rmsle', 'max_delta_step': 4, 'max_depth': 10, 'min_child_weight': 1, 'min_split_loss': 1615599527.817, 'n_estimators': 23, 'num_parallel_tree': 8, 'objective': 'survival:aft', 'tree_method': 'hist'}
{'score': -0.12, 'time': 120, 'booster': 'gbtree', 'eval_metric': 'error', 'max_delta_step': 7, 'max_depth': 8, 'min_child_weight': 4, 'min_split_loss': 7643941111.776, 'n_estimators': 19, 'num_parallel_tree': 34, 'objective': 'survival:cox', 'tree_method': 'exact'}
{'score': -0.12, 'time': 120, 'booster': 'dart', 'eval_metric': 'aucpr', 'max_delta_step': 7, 'max_depth': 20, 'min_child_weight': 3, 'min_split_loss': 4012132821.799, 'n_estimators': 16, 'num_parallel_tree': 35, 'objective': 'reg:squarederror', 'tree_method': 'approx'}
{'score': -0.12, 'time': 120, 'booster': 'dart', 'eval_metric': 'rmse', 'max_delta_step': 2, 'max_depth': 16, 'min_child_weight': 3, 'min_split_loss': 0.0, 'n_estimators': 31, 'num_parallel_tree': 40, 'objective': 'reg:tweedie', 'tree_method': 'hist'}
--------------------------------------------------
##### Results
Time elapsed:  2246.1084723472595
Parameter combinations evaluated:  25
Score best parameters:  5.873
--------------------
Best parameters: 
booster = gbtree str
eval_metric = rmse str
learning_rate = 0.0 float
max_delta_step = 10.0 float
max_depth = 13.0 float
min_child_weight = 2.0 float
n_estimators = 29.0 float
num_parallel_tree = 1.0 float
objective = survival:aft str
tree_method = approx str
--------------------
<Dataset:/home/jamie/code/kaggle-arc.hyperopt/./input/evaluation>
