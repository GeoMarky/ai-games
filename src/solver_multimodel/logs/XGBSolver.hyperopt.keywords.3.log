{'score': 7, 'time': 219, 'booster': 'gbtree', 'eval_metric': 'logloss', 'grow_policy': 'lossguide', 'objective': 'reg:squaredlogerror', 'sampling_method': 'uniform', 'tree_method': 'exact'}
{'score': 5, 'time': 180, 'booster': 'dart', 'eval_metric': 'rmsle', 'grow_policy': 'depthwise', 'objective': 'count:poisson', 'sampling_method': 'uniform', 'tree_method': 'approx'}
{'score': 1, 'time': 25, 'booster': 'gblinear', 'eval_metric': 'merror', 'grow_policy': 'lossguide', 'objective': 'count:poisson', 'sampling_method': 'uniform', 'tree_method': 'approx'}
{'score': 1, 'time': 17, 'booster': 'gblinear', 'eval_metric': 'poisson-nloglik', 'grow_policy': 'lossguide', 'objective': 'reg:tweedie', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}
{'score': 6, 'time': 107, 'booster': 'gbtree', 'eval_metric': 'aucpr', 'grow_policy': 'lossguide', 'objective': 'rank:pairwise', 'sampling_method': 'uniform', 'tree_method': 'gpu_hist'}
{'score': 0, 'time': 8, 'booster': 'gblinear', 'eval_metric': 'aucpr', 'grow_policy': 'depthwise', 'objective': 'survival:aft', 'sampling_method': 'gradient_based', 'tree_method': 'gpu_hist'}
{'score': 0, 'time': 0, 'booster': 'gblinear', 'eval_metric': 'mphe', 'grow_policy': 'lossguide', 'objective': 'survival:cox', 'sampling_method': 'gradient_based', 'tree_method': 'gpu_hist'}
{'score': 0, 'time': 15, 'booster': 'dart', 'eval_metric': 'gamma-nloglik', 'grow_policy': 'lossguide', 'objective': 'multi:softprob', 'sampling_method': 'uniform', 'tree_method': 'approx'}
{'score': 0, 'time': 0, 'booster': 'gblinear', 'eval_metric': 'tweedie-nlogli', 'grow_policy': 'depthwise', 'objective': 'survival:aft', 'sampling_method': 'uniform', 'tree_method': 'hist'}
{'score': 0, 'time': 0, 'booster': 'gbtree', 'eval_metric': 'tweedie-nlogli', 'grow_policy': 'lossguide', 'objective': 'reg:squaredlogerror', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}
{'score': 0, 'time': 12, 'booster': 'gbtree', 'eval_metric': 'mlogloss', 'grow_policy': 'lossguide', 'objective': 'survival:aft', 'sampling_method': 'gradient_based', 'tree_method': 'approx'}
{'score': 0, 'time': 2, 'booster': 'gblinear', 'eval_metric': 'cox-nloglik', 'grow_policy': 'depthwise', 'objective': 'multi:softmax', 'sampling_method': 'uniform', 'tree_method': 'hist'}
{'score': 0, 'time': 0, 'booster': 'dart', 'eval_metric': 'mphe', 'grow_policy': 'lossguide', 'objective': 'reg:squarederror', 'sampling_method': 'uniform', 'tree_method': 'hist'}
{'score': 0, 'time': 0, 'booster': 'dart', 'eval_metric': 'tweedie-nlogli', 'grow_policy': 'lossguide', 'objective': 'rank:pairwise', 'sampling_method': 'uniform', 'tree_method': 'gpu_hist'}
{'score': 0, 'time': 3, 'booster': 'dart', 'eval_metric': 'rmsle', 'grow_policy': 'depthwise', 'objective': 'multi:softmax', 'sampling_method': 'uniform', 'tree_method': 'hist'}
{'score': 1, 'time': 52, 'booster': 'gblinear', 'eval_metric': 'rmsle', 'grow_policy': 'depthwise', 'objective': 'reg:squarederror', 'sampling_method': 'uniform', 'tree_method': 'approx'}
{'score': 6, 'time': 75, 'booster': 'dart', 'eval_metric': 'aft-nloglik', 'grow_policy': 'lossguide', 'objective': 'rank:ndcg', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}
{'score': 3, 'time': 180, 'booster': 'gbtree', 'eval_metric': 'error', 'grow_policy': 'depthwise', 'objective': 'rank:map', 'sampling_method': 'gradient_based', 'tree_method': 'gpu_hist'}
{'score': 1, 'time': 35, 'booster': 'gblinear', 'eval_metric': 'map', 'grow_policy': 'depthwise', 'objective': 'count:poisson', 'sampling_method': 'uniform', 'tree_method': 'gpu_hist'}
{'score': 1, 'time': 17, 'booster': 'gblinear', 'eval_metric': 'gamma-nloglik', 'grow_policy': 'lossguide', 'objective': 'reg:tweedie', 'sampling_method': 'gradient_based', 'tree_method': 'hist'}
{'score': 6, 'time': 118, 'booster': 'gbtree', 'eval_metric': 'auc', 'grow_policy': 'depthwise', 'objective': 'reg:squaredlogerror', 'sampling_method': 'uniform', 'tree_method': 'gpu_hist'}
{'score': 0, 'time': 1, 'booster': 'gblinear', 'eval_metric': 'tweedie-nlogli', 'grow_policy': 'depthwise', 'objective': 'reg:squaredlogerror', 'sampling_method': 'uniform', 'tree_method': 'hist'}
{'score': 3, 'time': 180, 'booster': 'gbtree', 'eval_metric': 'aucpr', 'grow_policy': 'lossguide', 'objective': 'survival:cox', 'sampling_method': 'uniform', 'tree_method': 'approx'}
{'score': 5, 'time': 78, 'booster': 'gbtree', 'eval_metric': 'rmsle', 'grow_policy': 'lossguide', 'objective': 'rank:ndcg', 'sampling_method': 'gradient_based', 'tree_method': 'gpu_hist'}
{'score': 6, 'time': 180, 'booster': 'gbtree', 'eval_metric': 'logloss', 'grow_policy': 'depthwise', 'objective': 'reg:squaredlogerror', 'sampling_method': 'uniform', 'tree_method': 'exact'}
{'score': 7, 'time': 97, 'booster': 'gbtree', 'eval_metric': 'mae', 'grow_policy': 'lossguide', 'objective': 'rank:pairwise', 'sampling_method': 'uniform', 'tree_method': 'exact'}
{'score': 7, 'time': 181, 'booster': 'gbtree', 'eval_metric': 'rmse', 'grow_policy': 'lossguide', 'objective': 'reg:logistic', 'sampling_method': 'uniform', 'tree_method': 'exact'}
{'score': 6, 'time': 173, 'booster': 'gbtree', 'eval_metric': 'ndcg', 'grow_policy': 'lossguide', 'objective': 'reg:gamma', 'sampling_method': 'uniform', 'tree_method': 'exact'}
{'score': 7, 'time': 159, 'booster': 'gbtree', 'eval_metric': 'gamma-deviance', 'grow_policy': 'lossguide', 'objective': 'rank:pairwise', 'sampling_method': 'uniform', 'tree_method': 'exact'}
{'score': 6, 'time': 159, 'booster': 'gbtree', 'eval_metric': 'logloss', 'grow_policy': 'lossguide', 'objective': 'rank:map', 'sampling_method': 'uniform', 'tree_method': 'exact'}
--------------------------------------------------
##### Results
Time elapsed:  2288.5420603752136
Parameter combinations evaluated:  30
Score best parameters:  7.0
--------------------
Best parameters: 
booster = 0 int
eval_metric = mphe str
grow_policy = depthwise str
objective = reg:squarederror str
sampling_method = 0 int
tree_method = 0 int
--------------------
